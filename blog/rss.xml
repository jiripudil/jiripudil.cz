<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Blog – Jiří Pudil</title><description/><link>https://jiripudil.cz</link><language>en</language><item><title>I am starting a public notebook</title><link>https://jiripudil.cz/blog/public-notebook</link><guid isPermaLink="true">https://jiripudil.cz/blog/public-notebook</guid><description>In the overwhelming quantities of content produced on the Internet each day, I sometimes stumble upon something noteworthy. From this point forward, I am going to take notes in public.</description><pubDate>Wed, 18 Jun 2025 09:45:00 GMT</pubDate></item><item><title>The case for contravariant template types</title><link>https://jiripudil.cz/blog/contravariant-template-types</link><guid isPermaLink="true">https://jiripudil.cz/blog/contravariant-template-types</guid><description>PHPStan has only supported invariant and covariant template types because they are so prevalent in real-world applications. But contravariant template types also have their use cases, and the latest release of PHPStan adds support for them, among other small improvements to generics.</description><pubDate>Wed, 14 Dec 2022 09:30:00 GMT</pubDate></item><item><title>The true power of sealed classes</title><link>https://jiripudil.cz/blog/true-power-of-sealed-classes</link><guid isPermaLink="true">https://jiripudil.cz/blog/true-power-of-sealed-classes</guid><description>In my recent post, I&apos;ve introduced a PHPStan extension that brings support for sealed classes and interfaces to statically analyzed PHP. Looking back, I feel I haven&apos;t stressed the main benefit enough, so here I am doing it justice.</description><pubDate>Tue, 15 Nov 2022 09:30:00 GMT</pubDate></item><item><title>Seal your classes with PHPStan</title><link>https://jiripudil.cz/blog/seal-your-classes-with-phpstan</link><guid isPermaLink="true">https://jiripudil.cz/blog/seal-your-classes-with-phpstan</guid><description>Sealed classes are a useful feature of Kotlin: they allow you to specify which classes are allowed to extend a sealed class (or implement a sealed interface). With the recently released PHPStan 1.9.0, you can now introduce sealed classes to your PHP codebase too!</description><pubDate>Thu, 03 Nov 2022 09:20:00 GMT</pubDate></item><item><title>Your application needs a clock</title><link>https://jiripudil.cz/blog/your-application-needs-clock</link><guid isPermaLink="true">https://jiripudil.cz/blog/your-application-needs-clock</guid><description>Previously, I&apos;ve discussed working with date and time values both server- and client-side, and I&apos;ve covered storing temporal data in databases. This time, we&apos;re going to talk about telling time.</description><pubDate>Thu, 10 Mar 2022 09:00:00 GMT</pubDate></item><item><title>Storing dates and times in databases: the painless way</title><link>https://jiripudil.cz/blog/storing-dates-times-in-databases-painlessly</link><guid isPermaLink="true">https://jiripudil.cz/blog/storing-dates-times-in-databases-painlessly</guid><description>I&apos;ve already talked about working with date and time values on both sides of the web stack. However, in web development, we not only manipulate temporal values, we often need to store them somewhere and retrieve them later. This post discusses the best methods of persisting dates and times in databases.</description><pubDate>Thu, 03 Mar 2022 07:00:00 GMT</pubDate></item><item><title>Beyond Date: bulletproof date and time API in JavaScript</title><link>https://jiripudil.cz/blog/beyond-date</link><guid isPermaLink="true">https://jiripudil.cz/blog/beyond-date</guid><description>I&apos;ve talked about date and time not being easy in PHP, and it&apos;s not easier in JavaScript either. Luckily, similarly to the PHP ecosystem, the community has provided better solutions to date and time than the native &lt;code&gt;Date&lt;/code&gt;. Let&apos;s discuss them.</description><pubDate>Sat, 30 Oct 2021 19:00:00 GMT</pubDate></item><item><title>Beyond DateTime: a domain-driven approach to date and time</title><link>https://jiripudil.cz/blog/beyond-datetime-domain-driven-approach</link><guid isPermaLink="true">https://jiripudil.cz/blog/beyond-datetime-domain-driven-approach</guid><description>Time is omnipresent in software development. Pretty much every web application works with it in one way or another. Even the simplest blogging platform stores &quot;when&quot; a post should be published and then displays and sorts them using that information. While you might not run into any issues when developing a blogging platform, any more complex system can easily expose how complicated time actually is. Because time &lt;em&gt;is&lt;/em&gt; complicated. And yet, many standard libraries in programming languages only give us a limited arsenal to tackle it.</description><pubDate>Fri, 21 May 2021 08:30:00 GMT</pubDate></item><item><title>Services don&apos;t need names</title><link>https://jiripudil.cz/blog/di-services-do-not-need-names</link><guid isPermaLink="true">https://jiripudil.cz/blog/di-services-do-not-need-names</guid><description>I love Nette Framework&apos;s dependency injection solution. I really do. This post is here to share this passion, explaining why I think it is the best DI solution in today&apos;s PHP ecosystem.</description><pubDate>Fri, 12 Feb 2021 12:02:00 GMT</pubDate></item><item><title>Don&apos;t bring your own HTTP client</title><link>https://jiripudil.cz/blog/do-not-bring-your-own-http-client</link><guid isPermaLink="true">https://jiripudil.cz/blog/do-not-bring-your-own-http-client</guid><description>If you are developing a library that needs to make HTTP requests, here&apos;s how not to make it difficult for your consumers.</description><pubDate>Thu, 02 Apr 2020 11:30:00 GMT</pubDate></item><item><title>Body parser middleware that has your back</title><link>https://jiripudil.cz/blog/body-parser-middleware-that-has-your-back</link><guid isPermaLink="true">https://jiripudil.cz/blog/body-parser-middleware-that-has-your-back</guid><description>If you&apos;ve ever implemented an HTTP API in PHP, you probably know that there&apos;s one thing you have to do over and over and over: parse the request body and validate the resulting structure. Now that we have PSR-15, let&apos;s use a middleware for that!</description><pubDate>Tue, 28 Jan 2020 14:00:00 GMT</pubDate></item><item><title>Don&apos;t just float, swim with the floating point</title><link>https://jiripudil.cz/blog/dont-just-float-swim-with-the-floating-point</link><guid isPermaLink="true">https://jiripudil.cz/blog/dont-just-float-swim-with-the-floating-point</guid><description>They say you should understand floating-point precision by 35.0000000000014. This post is here to help you: it discusses how floats are (im)precise and why, demonstrates the problems you inevitably encounter when doing math with floats, and presents ways to prevent those problems by using more proper data types and structures.</description><pubDate>Fri, 07 Jun 2019 12:45:00 GMT</pubDate></item><item><title>The frameworkless application</title><link>https://jiripudil.cz/blog/frameworkless-application</link><guid isPermaLink="true">https://jiripudil.cz/blog/frameworkless-application</guid><description>There&apos;s a new buzzword on the PHP block: frameworkless. The activities of PHP communities last year made it possible to build robust applications, uniquely composed of little bits, without relying on a big framework. Let&apos;s find out how they work and if it&apos;s a good approach.</description><pubDate>Thu, 31 Jan 2019 14:55:00 GMT</pubDate></item><item><title>Keeping your dependencies up-to-date</title><link>https://jiripudil.cz/blog/keeping-your-dependencies-up-to-date</link><guid isPermaLink="true">https://jiripudil.cz/blog/keeping-your-dependencies-up-to-date</guid><description>As the business requirements grow, so does the list of dependencies. Managers ask for a new feature, you just composer-require this thing and that other thing, and wire it into the application. But how do you keep track of new features in the dependencies? Or bugfixes? Or, most importantly, security patches?!</description><pubDate>Fri, 14 Sep 2018 11:25:00 GMT</pubDate></item><item><title>What&apos;s new in Naja 1.1.0</title><link>https://jiripudil.cz/blog/what-is-new-in-naja-1-1-0</link><guid isPermaLink="true">https://jiripudil.cz/blog/what-is-new-in-naja-1-1-0</guid><description>In the course of the last few weeks, I have invested some time into Naja. You might recall my previous announcement in which I stated that there was still one big thing left to do. Well, now it is done!</description><pubDate>Fri, 27 Oct 2017 19:08:00 GMT</pubDate></item><item><title>Naja 1.0.0 released</title><link>https://jiripudil.cz/blog/naja-1-0-0-released</link><guid isPermaLink="true">https://jiripudil.cz/blog/naja-1-0-0-released</guid><description>Almost six months ago, I have released an alpha version of a new, modern AJAX library for Nette Framework named Naja. Now, after half a year in the wild production environment, I guess the time has come for a stable version.</description><pubDate>Sun, 10 Sep 2017 16:50:00 GMT</pubDate></item><item><title>Clock needs an interface</title><link>https://jiripudil.cz/blog/clock-needs-an-interface</link><guid isPermaLink="true">https://jiripudil.cz/blog/clock-needs-an-interface</guid><description>Almost every application needs to work with time: if not for some greater purpose like expiring access credentials, entities usually store information about when they were created or generally when something happened. Telling time is indeed a crucial responsibility, and being able to rely on the mechanism across the whole codebase is really important. But it can get problematic.</description><pubDate>Tue, 23 May 2017 15:50:00 GMT</pubDate></item><item><title>Nette Tester plugin for PhpStorm: 2.0.0 and beyond</title><link>https://jiripudil.cz/blog/nette-tester-plugin-for-phpstorm-2-and-beyond</link><guid isPermaLink="true">https://jiripudil.cz/blog/nette-tester-plugin-for-phpstorm-2-and-beyond</guid><description>A few minutes ago, I have released a total rework of my intellij-nette-tester plugin that integrates Nette Tester into PhpStorm.</description><pubDate>Sun, 21 May 2017 16:20:00 GMT</pubDate></item><item><title>Announcing three new open-source projects</title><link>https://jiripudil.cz/blog/announcing-three-new-open-source-projects</link><guid isPermaLink="true">https://jiripudil.cz/blog/announcing-three-new-open-source-projects</guid><description>I&apos;ve had a really productive couple of weeks and (mostly) weekends recently. I&apos;ve worked extensively on one of my side projects using modern JS stack including Webpack, faced issues here and there, and found a way to solve them. In the end, I proudly announce three new open-source packages: a modern AJAX library for Nette Framework, Neon loader for Webpack, and a library integrating the Webpack build process into Nette-powered applications.</description><pubDate>Mon, 27 Mar 2017 08:00:00 GMT</pubDate></item><item><title>Building Nette scripts with Webpack</title><link>https://jiripudil.cz/blog/building-nette-scripts-with-webpack</link><guid isPermaLink="true">https://jiripudil.cz/blog/building-nette-scripts-with-webpack</guid><description>Recently, in my bachelor&apos;s thesis, I&apos;ve used extensively the whole Node.js and JavaScript ecosystem, including Webpack for bundling modules. And I love it. So there&apos;s no wonder I&apos;ve tried setting it up in a classic Nette web application as well. Here goes a simple step-by-step example.</description><pubDate>Tue, 02 Aug 2016 18:45:00 GMT</pubDate></item><item><title>Signing commits in PhpStorm on OS X</title><link>https://jiripudil.cz/blog/signing-commits-in-phpstorm-on-os-x</link><guid isPermaLink="true">https://jiripudil.cz/blog/signing-commits-in-phpstorm-on-os-x</guid><description>If you host your repositories on Github, you have probably noticed they started verifying GPG signatures back in April. After half a day of pain, googling and experimenting, I came up with this definitive guide on how to set this up in PhpStorm on OS X.</description><pubDate>Sun, 29 May 2016 11:00:00 GMT</pubDate></item><item><title>Bootstrap your integration testing database</title><link>https://jiripudil.cz/blog/bootstrap-your-integration-testing-database</link><guid isPermaLink="true">https://jiripudil.cz/blog/bootstrap-your-integration-testing-database</guid><description>Testing your application against a real database and pseudo-real data is quite a challenge. I&apos;m going to show you how to automate the process of creating a test database with its schema and filling it with data, all with tools you might already be familiar with, including Nette Tester and Doctrine 2 along with Doctrine Migrations and Data Fixtures.</description><pubDate>Sat, 21 Nov 2015 11:30:00 GMT</pubDate></item><item><title>Gracefully degrading webfonts</title><link>https://jiripudil.cz/blog/gracefully-degrading-webfonts</link><guid isPermaLink="true">https://jiripudil.cz/blog/gracefully-degrading-webfonts</guid><description>Webfonts have become quite a common sight on websites. They give designers the flexibility to choose the perfect type without having to worry about the availability of the chosen fonts. But, on the other hand, they may be a real problem especially on slow connections. Luckily, there is a tool that solves this.</description><pubDate>Sun, 27 Sep 2015 11:15:00 GMT</pubDate></item><item><title>CacheFactory: for better testing of cache integration</title><link>https://jiripudil.cz/blog/cachefactory-for-better-testing-of-cache-integration</link><guid isPermaLink="true">https://jiripudil.cz/blog/cachefactory-for-better-testing-of-cache-integration</guid><description>Unit testing a class that uses Nette&apos;s cache can be a pain in the you-know-what. I&apos;ve found myself writing a very simple cache factory to solve this and make testing classes depending on cache a pleasing experience, so I&apos;ve decided to make an extension out of it.</description><pubDate>Fri, 26 Jun 2015 21:00:00 GMT</pubDate></item><item><title>Filtering data by user input with Kdyby/Doctrine</title><link>https://jiripudil.cz/blog/filtering-data-by-user-input-with-kdyby-doctrine</link><guid isPermaLink="true">https://jiripudil.cz/blog/filtering-data-by-user-input-with-kdyby-doctrine</guid><description>Listing data is essentially the most crucial part of websites. Be it products, articles, photos or whatnots, we usually need to provide the user the way to filter and/or sort the data by some preset parameters. I&apos;ll show you how to encapsulate such filtering within an object, build a user interface (in other words, a form) upon it, and use it with Kdyby/Doctrine&apos;s query objects to actually filter the data on the database level.</description><pubDate>Fri, 19 Jun 2015 16:20:00 GMT</pubDate></item><item><title>Introduction to Kdyby/DoctrineForms</title><link>https://jiripudil.cz/blog/introduction-to-kdyby-doctrineforms</link><guid isPermaLink="true">https://jiripudil.cz/blog/introduction-to-kdyby-doctrineforms</guid><description>Last December, I implemented smart forms via Kdyby/DoctrineForms on this blog. Since the documentation of the package seems to be quite lacking in its scope, I decided to share with you how to overcome the pitfalls I had encountered and make it work.</description><pubDate>Sat, 28 Feb 2015 10:00:00 GMT</pubDate></item><item><title>Decoupling components from presenters</title><link>https://jiripudil.cz/blog/decoupling-components-from-presenters</link><guid isPermaLink="true">https://jiripudil.cz/blog/decoupling-components-from-presenters</guid><description>In order for components in Nette to be as reusable as possible, it is necessary to decouple them from presenters. The cleanest way out of this is to &lt;em&gt;invert&lt;/em&gt; the dependency. After all, it&apos;s the presenter that requires the component, not vice versa.</description><pubDate>Sat, 21 Feb 2015 20:30:00 GMT</pubDate></item><item><title>Two-factor authentication via Google Authenticator</title><link>https://jiripudil.cz/blog/two-factor-authentication-via-google-authenticator</link><guid isPermaLink="true">https://jiripudil.cz/blog/two-factor-authentication-via-google-authenticator</guid><description>The need for authentication mechanisms that provide more security has been rising during the recent years. Google has ventured into this field with their Authenticator application which is now used not only by Google itself, but also other big players like Github or Dropbox. And you know what? It&apos;s not really that difficult to join this elite group. I&apos;m going to show you how.</description><pubDate>Sun, 16 Nov 2014 13:00:00 GMT</pubDate></item><item><title>Blazing fast file upload through Nginx</title><link>https://jiripudil.cz/blog/blazing-fast-file-upload-through-nginx</link><guid isPermaLink="true">https://jiripudil.cz/blog/blazing-fast-file-upload-through-nginx</guid><description>Implementing a shiny new feature for one of our clients, we faced a challenging task. We needed to handle uploads of loads of files. Effectively. Without torturing the server with unnecessary stuff.</description><pubDate>Sat, 25 Oct 2014 16:00:00 GMT</pubDate></item><item><title>Brand new jiripudil.cz</title><link>https://jiripudil.cz/blog/brand-new-jiripudil-cz</link><guid isPermaLink="true">https://jiripudil.cz/blog/brand-new-jiripudil-cz</guid><description>Earlier this week, I launched a brand new version of this website. It is written in PHP using Nette and Doctrine, uses Bower and Gulp to build assets, and strives to follow current best practices. And, last but definitely not least, its source code is open.</description><pubDate>Sat, 18 Oct 2014 12:30:00 GMT</pubDate></item><item><title>Configuring Nginx and PHP-FPM (and Nette)</title><link>https://jiripudil.cz/blog/configuring-nginx-php-fpm-nette</link><guid isPermaLink="true">https://jiripudil.cz/blog/configuring-nginx-php-fpm-nette</guid><description>This text provides a comprehensive guide on how to configure Nginx and PHP-FPM and make it run smoothly with Nette framework.</description><pubDate>Tue, 17 Jun 2014 17:30:00 GMT</pubDate></item><item><title>Shared component factories using traits</title><link>https://jiripudil.cz/blog/shared-component-factories-using-traits</link><guid isPermaLink="true">https://jiripudil.cz/blog/shared-component-factories-using-traits</guid><description>Do components shared across multiple presenters bloat your BasePresenter? Well, PHP 5.4 comes with a solution to this, with these snippets of reusable code called traits.</description><pubDate>Sat, 07 Sep 2013 21:40:00 GMT</pubDate></item></channel></rss>